local l_data = require "main.leveldata"

function init(self)
	gui.set_render_order(15)
	msg.post(".", "acquire_input_focus")
	self.time_alive = 0
	self.stage = 0
	self.fade_num = 0
	self.fade_reps = 4
	self.logo_started = false
	self.white_screen = false
	self.skip_splash = false
	self.logo_frame = 1
	self.logo_loops = 0
	self.frame_time = 0
	self.total_time = 0
	self.logo_fps = 12
	msg.post("#", "enable")
	gui.set_color(gui.get_node("bg"), vmath.vector4(0, 0, 0, 1))
	gui.set_color(gui.get_node("jar"), vmath.vector4(1, 1, 1, 0))
	gui.set_color(gui.get_node("blur"), vmath.vector4(1, 1, 1, 1))
	gui.set_color(gui.get_node("text"), vmath.vector4(1, 1, 1, 0))
	self.flea_pos = {x = {19, 20, 21, 23, 26, 27, 29, 32, 35, 38, 37, 36, 33, 32, 30, 29, 28, 27, 26, 25, 24, 22, 21, 20}, 
					 y = {15, 16, 18, 19, 19, 18, 17, 14, 13, 15, 18, 20, 21, 21, 20, 18, 16, 15, 13, 12, 11, 11, 12, 13}}
end


function update(self, dt)
	if not l_data.in_game then
		self.time_alive = self.time_alive + dt
		local logo = gui.get_node("jar")
		local text = gui.get_node("text")
		local blur = gui.get_node("blur")
		
		if self.skip_splash or ((self.logo_loops == 2 and self.logo_frame > 14) or self.logo_loops > 2) then 
			msg.post("#", "disable")
			msg.post(".", "release_input_focus")
			msg.post("/zoom#minefinder", "acquire_input_focus")
			msg.post("/gui#minefinder", "acquire_input_focus")
			msg.post("/gui-zoom#zoom", "acquire_input_focus")
			msg.post("/anims#anims", "acquire_input_focus")
			msg.post("/settings#settings", "acquire_input_focus")
			l_data.in_game = true
		end
		
		if not self.white_screen and self.time_alive >= 0.5 then--black to white screen
			if l_data.settings.splashscreen then
				gui.set_color(gui.get_node("bg"), vmath.vector4(1, 1, 1, 1))
				self.white_screen = true
			else
				self.skip_splash = true
			end
			msg.post("/zoom#minefinder", "black-gone")
		elseif not self.logo_started and self.time_alive >= 1.5 then
			self.logo_started = true
			local rand = 14
			while rand == 14 or rand == 24 or rand == 9 do
				rand = math.random(25)
			end
			msg.post("/sfx#sfx", "quick_play", {sound = rand})
			msg.post("/sfx#sfx", "quick_play", {sound = 29})
			gui.set_color(logo, vmath.vector4(1, 1, 1, 1))
			gui.set_color(text, vmath.vector4(1, 1, 1, 1))
		end

		local logo_color = gui.get_color(logo)

		if self.logo_started and not l_data.in_game then
			self.frame_time = self.frame_time + dt
			self.total_time = self.total_time + dt
			if self.frame_time > (1/self.logo_fps) then -- frame iterate
				local flea = gui.get_node("flea")
				self.logo_frame = self.logo_frame + math.floor(self.frame_time/(1/self.logo_fps))
				self.logo_loops = self.logo_loops + math.floor(self.logo_frame/25)
				self.logo_frame = (self.logo_frame-1)%24+1
				local flea_x = self.flea_pos.x[self.logo_frame]
				local flea_y = self.flea_pos.y[self.logo_frame]
				if self.logo_loops == 0 then
					if self.logo_frame < 3 then
						gui.play_flipbook(blur, "blurred-jar-"..self.logo_frame)
					elseif self.logo_frame == 3 then
						gui.set(blur, "color.w", 0)
					end
				end
				gui.set_position(flea, vmath.vector3(flea_x, flea_y, 0))
				gui.play_flipbook(flea, "flea-"..self.logo_frame)
				
				if (self.logo_frame-1)%6 == 0 then -- every sixth frame
					gui.play_flipbook(text, "logo-text-"..math.floor((self.logo_frame-1)/6)+1)
					gui.play_flipbook(logo, "logo-jar-"..math.floor((self.logo_frame-1)/6)+1)
					if (self.logo_loops > 0 and self.logo_frame > 12) or self.logo_loops > 1 then
						self.fade_num = self.fade_num + 1
						gui.set_color(logo, vmath.vector4(1, 1, 1, logo_color.w - 1/self.fade_reps))
						gui.set_color(text, vmath.vector4(1, 1, 1, logo_color.w - 1/self.fade_reps))
					end
				end
				self.frame_time = self.frame_time%(1/self.logo_fps)
			end
		end
	end
end

function on_input(self, action_id, action)
	if action.pressed and action_id == hash("minus") then
		msg.post("/zoom#minefinder", "scale_down")
	end

	if action.pressed and action_id == hash("plus") then
		msg.post("/zoom#minefinder", "scale_up")
	end

	if action.pressed and action_id == hash("debug") then
		msg.post("/zoom#minefinder", "debug")
	end


	if action.pressed and action_id == hash("debug2") then
		msg.post("/zoom#minefinder", "debug2")
	end

	if action.pressed and action_id == hash("debug3") then
		l_data.debug_shift = not l_data.debug_shift
		print("debug shift", l_data.debug_shift)
	end
end