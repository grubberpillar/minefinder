function init(self)
	msg.post(".", "acquire_input_focus")
	self.anims_on = true
	self.visible = false
	self.disabling = true --checks if the user just unchecked (true) or checked (false) a checkbox
	self.boxes = {"place", "rmv", "right", "wrong", "mines", "delay", "t.flip", "ui", "flip_all", "fast_flip"}
	self.hitbox_nodes = {}
	self.check_nodes = {}
	self.text_nodes = {}
	self.node_hover = nil
	
	for i = 1, 10 do
		self.hitbox_nodes[i] = gui.get_node(self.boxes[i] .. "-hitbox")
	end
	for i = 1, 10 do
		self.check_nodes[i] = gui.get_node(self.boxes[i] .. "-check")
	end
	for i = 1, 10 do
		self.text_nodes[i] = gui.get_node(self.boxes[i] .. "-txt-top")
	end
	
	self.checked = {true, true, true, true, true, true, true, true, false, true}
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("disable") then
		self.visible = false
		msg.post("#", "disable")
	elseif message_id == hash("enable") then
		self.visible = true
		msg.post("#", "enable")
	elseif message_id == hash("switch-clicked") then
		local check_frame
		if message.setting == true then
			check_frame = "check"
			if self.visible then
				check_frame = check_frame .. "-write"
			end
		else
			check_frame = "uncheck12"
		end
		for i = 1, 8 do
			if self.checked[i] ~= message.setting then
				self.checked[i] = message.setting
				gui.play_flipbook(self.check_nodes[i], check_frame)
			end
		end
	end
end

function on_input(self, action_id, action)
	local found_node = false
	for i = 1, 10 do 
		if gui.pick_node(self.hitbox_nodes[i], action.x, action.y) then -- all checkboxes
			found_node = true
			if self.node_hover ~= i then
				if self.node_hover then --replacing text color
					gui.set_color(self.text_nodes[i], vmath.vector4(nil, nil, nil, 1))--highlight text color
				end
				
				gui.set_color(self.text_nodes[i], vmath.vector4(nil, nil, nil, 0))--highlight text color
				self.node_hover = i
			end
			-- WIP - make selection box invisible
			if action_id == hash("touch") and action.pressed then
				if self.checked[i] then -- uncheck
					gui.play_flipbook(self.check_nodes[i], "check-remove")
					self.checked[i] = false
					if self.disabling == false then
						self.disabling = true
						msg.post("/gui#minefinder", "switch_preference", {prefer_up = false})
					end
					msg.post("/gui#minefinder", "update_switch", {diff = -1, index = i})
					msg.post("/zoom#minefinder", "update_anims", {setting = false, index = i})
				else -- check
					gui.play_flipbook(self.check_nodes[i], "check-write")
					self.checked[i] = true
					if self.disabling == true then
						self.disabling = false
						msg.post("/gui#minefinder", "switch_preference", {prefer_up = true})
					end
					msg.post("/gui#minefinder", "update_switch", {diff = 1, index = i})
					msg.post("/zoom#minefinder", "update_anims", {setting = true, index = i})
				end
			end
		end
	end
	if not found_node and self.node_hover then --replacing text color
		gui.set_color(self.text_nodes[self.node_hover], vmath.vector4(nil, nil, nil, 1))
		self.node_hover = nil
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
